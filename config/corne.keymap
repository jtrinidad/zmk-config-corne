#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF 0
#define NAV 1
#define SYM 2
#define ADJ 3
#define EXTRA 4

&mt {
    flavor = "balanced";
    quick-tap-ms = <175>;
    tapping-term-ms = <280>;
    require-prior-idle-ms = <150>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            global-quick-tap;
        };

        para: para {
            compatible = "zmk,behavior-tap-dance";
            label = "PARA";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS BACKSPACE>;
        };

        paraless: paraless {
            compatible = "zmk,behavior-mod-morph";
            label = "PARALESS";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        paragreat: paragreat {
            compatible = "zmk,behavior-mod-morph";
            label = "PARAGREAT";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    macros {
        browsertab: browsertab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL>,
                <&macro_tap>,
                <&kp TAB>,
                <&macro_release>,
                <&kp LCTRL>;
        };
    };

    combos {
        compatible = "zmk,combos";

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <13 29>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <15 21>;
        };

        perc {
            bindings = <&kp PERCENT>;
            key-positions = <5 17>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <28 16>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <4 16>;
        };

        pound {
            bindings = <&kp POUND>;
            key-positions = <3 15>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <2 14>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <26 14>;
        };

        copy {
            bindings = <&kp K_COPY>;
            key-positions = <28 27>;
        };

        paste {
            bindings = <&kp K_PASTE>;
            key-positions = <26 27>;
        };

        star {
            bindings = <&kp STAR>;
            key-positions = <8 20>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <32 20>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <7 19>;
        };

        minus {
            bindings = <&kp KP_MINUS>;
            key-positions = <31 19>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <30 18>;
        };

        leftbrack {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
        };

        rightbrack {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <33 32>;
        };

        para-less {
            bindings = <&paraless>;
            key-positions = <20 19>;
        };

        para-great {
            bindings = <&paragreat>;
            key-positions = <20 21>;
        };

        GamingToggle {
            bindings = <&tog 7>;
            key-positions = <24 25>;
        };
    };

    //

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |
            // |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |
            // |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |
            // | GUI | CTRL | SHFT | LWR | SPC |   | ENT | RSE  | BKSP | ALT | ESC |

            bindings = <
&kp ESC    &kp Q           &kp W           &kp E               &kp R             &kp T        &kp Y        &kp U              &kp I                &kp O            &kp P               &kp BACKSPACE
&kp LSHFT  &mt LEFT_WIN A  &mt LEFT_ALT S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G        &kp H        &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt RIGHT_ALT L  &mt RIGHT_GUI SEMI  &kp SQT
&kp LCTRL  &kp Z           &kp X           &kp C               &kp V             &kp B        &kp N        &kp M              &kp COMMA            &kp DOT          &kp FSLH            &kp RSHFT
                                           &lt 3 ESC           &lt 1 SPACE       &lt 2 TAB    &lt 5 ENTER  &lt 4 BACKSPACE    &lt 6 DEL
            >;
        };

        NAV {
            bindings = <
&trans  &trans        &trans        &trans            &trans          &trans    &kp K_REDO    &kp K_PASTE    &kp K_COPY     &kp K_CUT     &kp K_UNDO  &trans
&trans  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &trans    &kp CAPSLOCK  &kp LEFT       &kp DOWN       &kp UP_ARROW  &kp RIGHT   &trans
&tog 7  &tog 0        &trans        &trans            &trans          &trans    &kp INSERT    &kp HOME       &kp PAGE_DOWN  &kp PAGE_UP   &kp END     &trans
                                    &trans            &trans          &trans    &kp ENTER     &kp BACKSPACE  &kp DELETE
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &kp K_REDO  &kp K_PASTE     &kp K_COPY      &kp K_CUT     &kp K_UNDO       &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &trans      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &trans
&trans  &trans    &trans    &trans     &trans     &trans    &trans      &trans          &trans          &trans        &trans           &trans
                            &trans     &trans     &trans    &mkp RCLK   &mkp LCLK       &mkp MB3
            >;
        };

        MEDIA {
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans    &trans      &kp K_PASTE     &kp K_COPY         &kp K_CUT        &kp K_UNDO    &trans
&trans  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &trans      &kp K_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT    &trans
&trans  &trans    &trans    &trans     &trans     &trans    &trans      &bt BT_SEL 0    &bt BT_SEL 1       &bt BT_SEL 2     &bt BT_SEL 3  &trans
                            &trans     &trans     &trans    &kp K_STOP  &kp K_NEXT      &kp K_MUTE
            >;
        };

        NUM {
            bindings = <
&trans  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT     &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL    &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH     &trans  &trans     &trans     &trans    &trans    &trans
                           &kp DOT  &kp N0  &kp MINUS    &trans  &trans     &trans
            >;
        };

        SYM {
            bindings = <
&trans  &kp LEFT_BRACE  &kp AMPERSAND  &kp KP_MULTIPLY       &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &trans  &trans     &trans     &trans    &trans    &trans
&trans  &kp COLON       &kp DOLLAR     &kp PERCENT           &kp CARET              &kp PLUS           &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&trans  &kp TILDE       &kp EXCL       &kp AT_SIGN           &kp POUND              &kp PIPE           &trans  &trans     &trans     &trans    &trans    &trans
                                       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER          &trans  &trans     &trans
            >;
        };

        FUN {
            bindings = <
&kp F12  &kp F7  &kp F8  &kp F9              &trans     &trans       &trans  &trans     &trans     &trans    &trans    &trans
&kp F11  &kp F4  &kp F5  &kp F6              &trans     &trans       &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &trans
&kp F10  &kp F1  &kp F2  &kp F3              &trans     &trans       &trans  &trans     &trans     &trans    &trans    &trans
                         &kp K_CONTEXT_MENU  &kp SPACE  &kp ENTER    &trans  &trans     &trans
            >;
        };

        GAMING {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R      &kp T      &kp Y    &kp U     &kp I      &kp O    &kp P     &kp BSPC
&kp LSHFT  &kp A  &kp S  &kp D     &kp F      &kp G      &kp H    &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V      &kp B      &kp N    &kp M     &kp COMMA  &kp DOT  &kp FSLH  &tog 0
                         &kp LALT  &kp SPACE  &kp TAB    &kp RET  &kp BSPC  &kp DEL
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        l3 {
            if-layers = <1 1>;
            then-layer = <1>;
        };
    };
};
